name: "TEST"

on:
  repository_dispatch:
  workflow_call:
    inputs:
      input_1:
        type: string
        required: false
        default: 'default_1'
      input_2:
        type: string
        required: false
        default: 'default_2'
      input_3:
        type: string
        required: false
  workflow_dispatch:
    inputs:
      input_1:
        type: string
        required: false
        default: 'default_3'
      input_2:
        type: string
        required: false
        default: 'default_4'
      input_3:
        type: string
        required: false
  push:
    tags-ignore:
      - '**'
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - name: "Validate Input"
        id: "inputs"
        run: |
          echo input_2_A [${input_2_A}]
          echo input_2_B [${input_2_B}]
          echo input_2_C [${input_2_C}]
          echo "--------------------- ENVS ---------------------"
          env
        env:
          input_2_A: ${{ inputs.input_2 }}
          input_2_B: ${{ github.event.inputs.input_2 }}
          input_2_C: ${{ github.event.client_payload.input_2 }}
      - name: "Checkout"
        uses: actions/checkout@main
      - name: "Setup Node"
        uses: actions/setup-node@main
        with:
          node-version: "16"
          cache: npm
      - name: "update dependencies"
        run: |
          npm outdated || true 
          npm update --save
          npm audit fix --force
      - name: "Run Tests"
        run: |
          npm ci && npm run test:coverage
      - name: "Read Input Info"
        id: "input_info"
        uses: YunaBraska/input-merger-action@main
      - name: "Print Input Info"
        run: |
          echo "input_1      [${{ steps.input_info.outputs.input_1 }}]"
          echo "input_2      [${{ steps.input_info.outputs.input_2 }}]"
          echo "event_name   [${{ steps.input_info.outputs.event_name }}]"
          echo "event_source [${{ steps.input_info.outputs.event_source }}]"
